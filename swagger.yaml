openapi: 3.0.0
info:
  description: 셔클 플랫폼과 PM 운영사간의 연동을 위한 API
  version: "1.0.1"
  title: Shucle PM API
servers:
  - url: '-'
tags:
  - name: PM API
    description: PM 운영사에서 제공하는 API
  - name: Shucle API
    description: 셔클 플랫폼에서 제공하는 API
paths:
  /auth:
    post:
      tags:
        - PM API
      summary: 인증
      description: API 요청을 위한 토큰을 생성합니다.
      operationId: authClient
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                service_key:
                  description: service key
                  type: string
                access_secret:
                  description: secret
                  type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/common'
                  - type: object
                    properties:
                      response:
                        type: object
                        $ref: '#/components/schemas/auth'
        '400':
          $ref: '#/components/responses/400BadRequest'
        '401':
          $ref: '#/components/responses/401Unauthorized'
        '403':
          $ref: '#/components/responses/403Forbidden'
        '404':
          $ref: '#/components/responses/404NotFound'
        '500':
          $ref: '#/components/responses/500InternalServerError'
  /users:
    post:
      tags:
        - PM API
      summary: 회원가입
      description: 회원 가입을 처리할 수 있도록 합니다.
      operationId: createUser
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  description: user id
                  type: string
                mobile_number:
                  description: mobile number
                  type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/common'
        '400':
          $ref: '#/components/responses/400BadRequest'
        '401':
          $ref: '#/components/responses/401Unauthorized'
        '403':
          $ref: '#/components/responses/403Forbidden'
        '404':
          $ref: '#/components/responses/404NotFound'
        '500':
          $ref: '#/components/responses/500InternalServerError'
  '/users/{user_id}':
    put:
      tags:
        - PM API
      summary: 회원정보 수정
      description: 회원 정보를 수정합니다.
      operationId: updateUser
      parameters:
        - name: user_id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                mobile_number:
                  description: mobile number
                  type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/common'
        '400':
          $ref: '#/components/responses/400BadRequest'
        '401':
          $ref: '#/components/responses/401Unauthorized'
        '403':
          $ref: '#/components/responses/403Forbidden'
        '404':
          $ref: '#/components/responses/404NotFound'
        '500':
          $ref: '#/components/responses/500InternalServerError'
  /regions:
    get:
      tags:
        - PM API
      summary: 서비스 지역 목록 조회
      description: PM 서비스를 제공하는 지역 목록을 조회합니다.
      operationId: listRegions
      parameters:
        - name: fields
          in: query
          schema:
            type: string
            enum: [updateTime]
          description: 지역 목록이 업데이트된 시간만 받아올 때 사용합니다.
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/region'
        '400':
          $ref: '#/components/responses/400BadRequest'
        '401':
          $ref: '#/components/responses/401Unauthorized'
        '404':
          $ref: '#/components/responses/404NotFound'
        '500':
          $ref: '#/components/responses/500InternalServerError'
  /rates:
    get:
      tags:
        - PM API
      summary: 요금 목록 조회
      description: 요금 목록을 조회합니다.
      operationId: listRates
      parameters:
        - name: fields
          in: query
          schema:
            type: string
            enum: [updateTime]
          description: 요금 목록이 업데이트된 시간만 받아올 때 사용합니다.
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/common'
                  - type: object
                    properties:

                      updateTime:
                        type: string
                        format: date-time
                      response:
                        type: object
                        properties:
                          list:
                            type: array
                            items:
                              type: object
                              $ref: '#/components/schemas/rates'
        '400':
          $ref: '#/components/responses/400BadRequest'
        '401':
          $ref: '#/components/responses/401Unauthorized'
        '404':
          $ref: '#/components/responses/404NotFound'
        '500':
          $ref: '#/components/responses/500InternalServerError'
  '/location/point-info':
    get:
      tags:
        - PM API
      summary: 좌표 정보 조회
      description: 해당 좌표의 서비스 정보를 조회합니다.
      operationId: getPointInfo
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                lat:
                  description: 위도
                  type: number
                lng:
                  description: 경도
                  type: number
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/common'
                properties:
                  response:
                    $ref: '#/components/schemas/pointInfo'
        '400':
          $ref: '#/components/responses/400BadRequest'
        '401':
          $ref: '#/components/responses/401Unauthorized'
        '403':
          $ref: '#/components/responses/403Forbidden'
        '404':
          $ref: '#/components/responses/404NotFound'
        '500':
          $ref: '#/components/responses/500InternalServerError'
  /location/vehicles/types:
    get:
      tags:
        - PM API
      summary: 제공가능한 PM 종류 목록 조회
      description: 제공가능한 PM 종류 목록을 조회합니다.
      operationId: listVehicleTypes
      parameters:
        - name: fields
          in: query
          schema:
            type: string
            enum: [updateTime]
          description: PM 종류 목록이 업데이트된 시간만 받아올 때 사용합니다.
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/common'
                  - type: object
                    properties:
                      response:
                        type: object
                        properties:
                          list:
                            type: array
                            items:
                              type: object
                              $ref: '#/components/schemas/vehicleType'
        '400':
          $ref: '#/components/responses/400BadRequest'
        '401':
          $ref: '#/components/responses/401Unauthorized'
        '404':
          $ref: '#/components/responses/404NotFound'
        '500':
          $ref: '#/components/responses/500InternalServerError'
  /location/vehicles:
    get:
      tags:
        - PM API
      summary: 이용가능한 PM 검색
      description: 이용가능한 PM을 검색합니다.
      operationId: searchAvailableVehicles
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                ne_lat:
                  description: 동북 위도
                  type: number
                ne_lng:
                  description: 동북 경도
                  type: number
                sw_lat:
                  description: 남서 위도
                  type: number
                sw_lng:
                  description: 남서 경도
                  type: number
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/common'
                  - type: object
                    properties:
                      response:
                        type: object
                        properties:
                          list:
                            type: array
                            items:
                              type: object
                              $ref: '#/components/schemas/vehicle'
        '400':
          $ref: '#/components/responses/400BadRequest'
        '401':
          $ref: '#/components/responses/401Unauthorized'
        '404':
          $ref: '#/components/responses/404NotFound'
        '500':
          $ref: '#/components/responses/500InternalServerError'
  '/location/vehicles/{vehicle_id}':
    get:
      tags:
        - PM API
      summary: PM 정보 조회
      description: 특정 PM의 정보를 조회합니다.
      operationId: getVehicle
      parameters:
        - name: vehicle_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/common'
                  - type: object
                    properties:
                      response:
                        type: object
                        $ref: '#/components/schemas/vehicle'
        '400':
          $ref: '#/components/responses/400BadRequest'
        '401':
          $ref: '#/components/responses/401Unauthorized'
        '404':
          $ref: '#/components/responses/404NotFound'
        '500':
          $ref: '#/components/responses/500InternalServerError'
  '/location/vehicles/{vehicle_id}/toot':
    post:
      tags:
        - PM API
      summary: PM 벨 울리기
      operationId: tootVehicle
      parameters:
        - name: vehicle_id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/coordinates'
                - type: object
                  properties:
                    user_id:
                      type: string
      responses:
        '200':
          description: successful operation
        '400':
          $ref: '#/components/responses/400BadRequest'
        '401':
          $ref: '#/components/responses/401Unauthorized'
        '403':
          $ref: '#/components/responses/403Forbidden'
        '404':
          $ref: '#/components/responses/404NotFound'
        '500':
          $ref: '#/components/responses/500InternalServerError'
  /trips:
    post:
      tags:
        - PM API
      summary: PM 대여
      operationId: startTrip
      requestBody:
        $ref: '#/components/requestBodies/startTrip'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/common'
                properties:
                  response:
                    $ref: '#/components/schemas/trip'
        '400':
          $ref: '#/components/responses/400BadRequest'
        '401':
          $ref: '#/components/responses/401Unauthorized'
        '403':
          $ref: '#/components/responses/403Forbidden'
        '404':
          $ref: '#/components/responses/404NotFound'
        '500':
          $ref: '#/components/responses/500InternalServerError'
  '/trips/{trip_id}':
    get:
      tags:
        - PM API
      summary: PM 대여 정보 조회
      operationId: getTrip
      parameters:
        - name: trip_id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  description: 사용자 ID
                  type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/common'
                properties:
                  response:
                    $ref: '#/components/schemas/trip'
        '400':
          $ref: '#/components/responses/400BadRequest'
        '401':
          $ref: '#/components/responses/401Unauthorized'
        '403':
          $ref: '#/components/responses/403Forbidden'
        '404':
          $ref: '#/components/responses/404NotFound'
        '500':
          $ref: '#/components/responses/500InternalServerError'
  '/trips/{trip_id}/finish':
    post:
      tags:
        - PM API
      summary: PM 대여 종료
      operationId: finishTrip
      parameters:
        - name: trip_id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        $ref: '#/components/requestBodies/finishTrip'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/common'
                properties:
                  response:
                    $ref: '#/components/schemas/trip'
        '400':
          $ref: '#/components/responses/400BadRequest'
        '401':
          $ref: '#/components/responses/401Unauthorized'
        '404':
          $ref: '#/components/responses/404NotFound'
        '500':
          $ref: '#/components/responses/500InternalServerError'
  '/trips/{trip_id}/force-finish':
    post:
      tags:
        - PM API
      summary: PM 대여 종료
      operationId: finishForceTrip
      parameters:
        - name: trip_id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  description: user ID
                  type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/trip'
        '400':
          $ref: '#/components/responses/400BadRequest'
        '401':
          $ref: '#/components/responses/401Unauthorized'
        '404':
          $ref: '#/components/responses/404NotFound'
        '500':
          $ref: '#/components/responses/500InternalServerError'
  '/trips/{trip_id}/parking':
    post:
      tags:
        - PM API
      summary: PM 대여 종료 후 주차 이미지 등록
      operationId: updateParkingImage
      parameters:
        - name: trip_id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  description: 사용자 ID
                  type: string
                parking_image:
                  description: 주차 이미지 URL
                  type: string
                  format: uri
      responses:
        '200':
          description: successful operation
        '400':
          $ref: '#/components/responses/400BadRequest'
        '401':
          $ref: '#/components/responses/401Unauthorized'
        '404':
          $ref: '#/components/responses/404NotFound'
        '500':
          $ref: '#/components/responses/500InternalServerError'
  /payments:
    get:
      tags:
        - Shucle API
      summary: 결제 내역 목록 조회
      description: 결제 내역 목록 조회
      operationId: listPayments
      parameters:
        - name: startTime
          in: query
          schema:
            type: string
            format: date-time
          required: true
          description: 목록 조회 기간 시작 시각
        - name: endTime
          in: query
          schema:
            type: string
            format: date-time
          required: true
          description: 목록 조회 기간 종료 시각
        - name: pageSize
          in: query
          schema:
            type: string
        - name: pageToken
          in: query
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  payments:
                    type: array
                    items:
                      $ref: '#/components/schemas/payment'
                  nextPageToken:
                    type: string
        '400':
          $ref: '#/components/responses/400BadRequest'
        '401':
          $ref: '#/components/responses/401Unauthorized'
        '404':
          $ref: '#/components/responses/404NotFound'
        '500':
          $ref: '#/components/responses/500InternalServerError'
components:
  schemas:
    trip:
      type: object
      properties:
        trip_id:
          type: integer
        riding_distance:
          type: integer
        start_loc:
          $ref: '#/components/schemas/coordinates'
        end_loc:
          $ref: '#/components/schemas/coordinates'
        state:
          type: string
          enum:
            - IDLE
            - RIDING
            - REPAIR
        start_dt:
          type: integer
          description: 시작 시각 (unix timestamp)
        end_dt:
          type: integer
          description: 종료 시각 (unix timestamp)
        vehicle:
          $ref: '#/components/schemas/vehicle'
        parking_price:
          type: integer
          description: 주차 요금
        order_amount:
          type: integer
    coordinates:
      type: object
      properties:
        lat:
          type: number
          description: 위도
        lng:
          type: number
          description: 경도
    place:
      type: object
      properties:
        displayName:
          type: string
        stationId:
          type: string
        coordinates:
          $ref: '#/components/schemas/coordinates'
    rates:
      type: object
      description: 요금 정보
      required: [region_id, displayName, currencyCode, price, description]
      properties:
        region_id:
          type: string
          description: region id
        vehicle_type_id:
          type: string
          description: vehicle type id
        type:
          type: string
          description: 요금제 타입
          enum:
          - WEEKLY
          - NIGHT
        start_time:
          type: string
          description: 시작시간 (ex. 0000 새벽 12시)
        end_time:
          type: string
          description: 종료시간 (ex 0459 새벽 4시 59분)
        title:
          type: string
          description: 요금제 이름
        unlock_sec:
          type: integer
          description: 대여 시간
        unlock_amount:
          type: integer
          description: 대여 기본 금액
        unit_sec:
          type: integer
          description: 요금 기준 단위 시간(초)
        unit_sec_per_amount:
          type: integer
          description: 요금 기준 단위 시간 당 비용
    region:
      type: object
      description: 서비스 지역
      required: [type, features, properties]
      properties:
        type:
          type: string
          enum: [FeatureCollection]
          description: GeoJSON FeatureCollection (https://geojson.org/geojson-spec.html)
        features:
          type: array
          items:
            title: GeoJSON Feature
            type: object
            description: 지역 내 구역
            required: [type, geometry, properties]
            properties:
              type:
                type: string
                enum: [Feature]
              geometry:
                title: GeoJSON MultiPolygon
                description: 구역의 형태
                properties:
                  type:
                    type: string
                    enum: [MultiPolygon]
                  coordinates:
                    type: array
                    items:
                      type: array
                      items:
                        type: array
                        minItems: 4
                        items:
                          type: array
                          minItems: 2
                          items:
                            type: number
              properties:
                type: object
                properties:
                  rules:
                    type: array
                    description: 구역의 속성
                    items:
                      type: object
                      required: [pickupAllowed, dropOffAllowed, rideThroughAllowed]
                      properties:
                        vehicleTypeIds:
                          type: array
                          description: 해당 속성이 적용되는 vehicle type ID 목록, 비어있으면 모든 vechile type에 적용
                          items:
                            type: string
                        pickupAllowed:
                          type: boolean
                          description: 승차 가능 여부
                        dropOffAllowed:
                          type: boolean
                          description: 하차 가능 여부
                        rideThroughAllowed:
                          type: boolean
                          description: 주행 가능 여부
                        maximumSpeedKph:
                          type: integer
                          description: 최대 제한 속도
                          minimum: 0
        properties:
          type: object
          properties:
            id:
              type: string
              description: 지역 ID
            displayName:
              type: string
              description: 지역 이름
            updateTime:
              type: string
              description: 지역정보 마지막 수정 시각
              format: date-time
          required: [id, updateTime]
    vehicle:
      type: object
      required: [vehicle_sn, vehicle_type_id, location, battery, region_id, state, available_dist, parking_image]
      properties:
        vehicle_sn:
          type: string
          description: 기기 ID
        vehicle_type_id:
          type: integer
          description: 기기 타입 ID
        location:
          $ref: '#/components/schemas/coordinates'
        battery:
          type: integer
          description: 배터리 잔량
        region_id:
          type: integer
          description: 지역 ID
        state:
          type: string
          description: 기기 상태
          enum:
            - IDLE
            - IN_USE
        available_dist:
          type: integer
          description: 주행 가능 거리(m단위)
        parking_image:
          type: string
          description: 주차 이미지 URL
    vehicleType:
      type: object
      required: [id, name, type]
      properties:
        id:
          type: integer
          description: vehicle type ID
        name:
          type: string
          description: vehicle type name
        type:
          type: string
          description: vehicle type
    fare:
      type: object
      description: 요금 정보, 모든 part의 합이 총 요금
      properties:
        description:
          type: string
          description: 요금에 대한 설명
        parts:
          type: array
          items:
            $ref: '#/components/schemas/farePart'
    farePart:
      type: object
      properties:
        amount:
          type: number
          description: 요금
        currencyCode:
          type: integer
          description: 통화 코드 (ISO 4217)
        type:
          type: string
          enum: [FARE, FINE, REFUND]
          description: 부가된 요금 타입
        description:
          type: string
          description: 해당 part에 대한 설명
    payment:
      type: object
      properties:
        id:
          type: string
          description: 결제 ID
        bookingId:
          type: string
          description: 관련된 booking ID
        fare:
          $ref: '#/components/schemas/fare'
        createTime:
          type: string
          format: date-time
          description: 결제 생성 시점
        description:
          type: string
          description: 결제에 대한 설명
    error:
      type: object
      properties:
        result_code:
          type: integer
          description: response code
        message:
          type: string
          description: response description
    auth:
      type: object
      properties:
        access_token:
          type: string
          description: bearer token
        token_type:
          type: string
          description: bearer
        expires_in:
          type: string
          description: expire time (sec)
    pointInfo:
      type: object
      properties:
        area_type:
          type: string
          enum:
            - ADD_CHARGE
          description: 지역 타입
        parking_price:
          type: integer
          description: 주차 요금
    common:
      type: object
      properties:
        result_code:
          type: integer
          description: response code
        message:
          type: string
          description: response description
    
  requestBodies:
    startTrip:
      content:
        application/json:
          schema:
            type: object
            properties:
              user_id:
                description: 사용자 ID
                type: string
              vehicle_sn:
                description: 기기 ID
                type: string
              lat:
                description: 위도
                type: number
              lng:
                description: 경도
                type: number
      required: true
    finishTrip:
      content:
        application/json:
          schema:
            type: object
            properties:
              user_id:
                type: string
              lat:
                description: 위도
                type: string
              lng:
                description: 경도
                type: string
      description: List of user object
      required: true
  responses:
    400BadRequest:
      description: 잘못된 요청, 필수 파라미터 누락
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/error"
    401Unauthorized:
      description: 인증 실패
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/error"
    403Forbidden:
      description: 엑세스 권한 없음
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/error"
    404NotFound:
      description: 리소스 찾을 수 없음
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/error"
    500InternalServerError:
      description: 서버 내부 오류
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/error"